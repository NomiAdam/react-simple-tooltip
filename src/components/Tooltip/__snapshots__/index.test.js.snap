// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tooltip renders 1`] = `
.c0 {
  position: absolute;
  z-index: 8;
  top: 100%;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  margin-top: 8px;
}

<Tooltip
  offset={8}
  open={true}
  placement="bottom"
  zIndex={8}
>
  <Styled(styled.div)
    offset={8}
    zIndex={8}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
          position: absolute;
          ",
              [Function],
              ";
          ",
              [Function],
              ";
        ",
              "
          top: 100%;
          left: 50%;
          transform: translateX(-50%);
          margin-top: ",
              [Function],
              "px;
        ",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-bdVaJa",
          ],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      offset={8}
      zIndex={8}
    >
      <div
        className="c0"
        offset={8}
      >
        ðŸ˜Ž
      </div>
    </StyledComponent>
  </Styled(styled.div)>
</Tooltip>
`;

exports[`Tooltip renders 2`] = `
.c0 {
  position: absolute;
  z-index: 8;
  bottom: 100%;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  margin-bottom: 8px;
}

<Tooltip
  offset={8}
  open={true}
  placement="top"
  zIndex={8}
>
  <Styled(styled.div)
    offset={8}
    zIndex={8}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
          position: absolute;
          ",
              [Function],
              ";
          ",
              [Function],
              ";
        ",
              "
          bottom: 100%;
          left: 50%;
          transform: translateX(-50%);
          margin-bottom: ",
              [Function],
              "px;
        ",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-bdVaJa",
          ],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      offset={8}
      zIndex={8}
    >
      <div
        className="c0"
        offset={8}
      >
        ðŸ˜Ž
      </div>
    </StyledComponent>
  </Styled(styled.div)>
</Tooltip>
`;

exports[`Tooltip renders 3`] = `
.c0 {
  position: absolute;
  z-index: 8;
  left: 100%;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  margin-left: 8px;
}

<Tooltip
  offset={8}
  open={true}
  placement="right"
  zIndex={8}
>
  <Styled(styled.div)
    offset={8}
    zIndex={8}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ifAKCX",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
          position: absolute;
          ",
              [Function],
              ";
          ",
              [Function],
              ";
        ",
              "
          left: 100%;
          top: 50%;
          transform: translateY(-50%);
          margin-left: ",
              [Function],
              "px;
        ",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-bdVaJa",
          ],
          "render": [Function],
          "styledComponentId": "sc-ifAKCX",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      offset={8}
      zIndex={8}
    >
      <div
        className="c0"
        offset={8}
      >
        ðŸ˜Ž
      </div>
    </StyledComponent>
  </Styled(styled.div)>
</Tooltip>
`;

exports[`Tooltip renders 4`] = `
.c0 {
  position: absolute;
  z-index: 8;
  right: 100%;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  margin-right: 8px;
}

<Tooltip
  offset={8}
  open={true}
  placement="left"
  zIndex={8}
>
  <Styled(styled.div)
    offset={8}
    zIndex={8}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
          position: absolute;
          ",
              [Function],
              ";
          ",
              [Function],
              ";
        ",
              "
          right: 100%;
          top: 50%;
          transform: translateY(-50%);
          margin-right: ",
              [Function],
              "px;
        ",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-bdVaJa",
          ],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      offset={8}
      zIndex={8}
    >
      <div
        className="c0"
        offset={8}
      >
        ðŸ˜Ž
      </div>
    </StyledComponent>
  </Styled(styled.div)>
</Tooltip>
`;

exports[`Tooltip should create a Tooltip with an animation 1`] = `
.c0 {
  position: absolute;
  -webkit-animation: 100ms ease-out 0s 1 bcCCNc;
  animation: 100ms ease-out 0s 1 bcCCNc;
  z-index: 8;
  bottom: 100%;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  margin-bottom: 8px;
}

<Tooltip
  fadeDuration={100}
  fadeEasing="ease-out"
  offset={8}
  open={true}
  zIndex={8}
>
  <Styled(styled.div)
    fadeDuration={100}
    fadeEasing="ease-out"
    offset={8}
    zIndex={8}
  >
    <StyledComponent
      fadeDuration={100}
      fadeEasing="ease-out"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
          position: absolute;
          ",
              [Function],
              ";
          ",
              [Function],
              ";
        ",
              "
          bottom: 100%;
          left: 50%;
          transform: translateX(-50%);
          margin-bottom: ",
              [Function],
              "px;
        ",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-bdVaJa",
          ],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      offset={8}
      zIndex={8}
    >
      <div
        className="c0"
        offset={8}
      >
        ðŸ˜Ž
      </div>
    </StyledComponent>
  </Styled(styled.div)>
</Tooltip>
`;
